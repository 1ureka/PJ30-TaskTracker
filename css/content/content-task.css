:root {
  --is-task-list-hovable: 1;
  --is-task-menu-usable: auto;
}

/*  */

#tasks-container {
  position: absolute;
  width: 100%;
  box-sizing: border-box;
  padding: 60px;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  gap: 10px;
}

/*  */
/*  */

.task-container {
  display: flex;
  flex-direction: column;
  gap: 7px;
  position: relative;
  max-width: 100%;
  box-sizing: border-box;
  padding: 12px 15px 15px 15px;
  border-radius: 5px;
  cursor: default;
  background-color: transparent;
  backdrop-filter: blur(10px) brightness(0.5) hue-rotate(5deg);
  box-shadow: rgba(0, 0, 0, 0.75) 0px 3px 4px,
    rgba(0, 0, 0, 0.35) 5px 8px 3px -3px, rgba(0, 0, 0, 0.45) 0px -2px 0px inset,
    rgba(255, 255, 255, 0.3) 2px 5px 3px -3px inset;
}
.task-info-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 30px;
  z-index: 1;
}
.task-tags-container,
.task-menu-container {
  position: relative;
  display: flex;
  align-items: center;
  gap: 10px;
}
.task-menu-container {
  gap: 5px;
  pointer-events: none;
  opacity: 0;
  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.task-container:hover .task-menu-container {
  pointer-events: var(--is-task-menu-usable);
  opacity: var(--is-task-list-hovable);
}

/*  */
/*  */

.task-tags-container > span {
  --task-tags-font-size: 17px;
  display: flex;
  align-items: center;
  color: rgb(10 10 10);
  font-size: var(--task-tags-font-size);
  height: calc(var(--task-tags-font-size) + 1px);
  padding: 3.5px 8px 3.5px 0.5px;
  font-weight: bold;
  border-radius: var(--task-tags-font-size);
  cursor: pointer;
  user-select: none;
}
#content.is-note-page .task-tags-container > span:nth-child(2) {
  display: none;
}
.task-tags-container > span:hover {
  box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 0px 2px,
    rgba(0, 0, 0, 0.8) 0px 4px 6px -1px,
    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;
}
.task-tags-container > span:active {
  scale: 1;
  translate: 0px 3px;
}

.task-options {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  max-height: 250px;
  position: fixed;
  translate: -50% 0%;
  scale: 0.8 0;
  padding: 10px;
  transition: all 0.35s cubic-bezier(0.645, 0.045, 0.355, 1);
  transform-origin: top;
}
.task-options:focus {
  scale: 0.8;
  outline: 0;
}
.task-option {
  padding: 7px 5px;
  width: 100px;
  cursor: pointer;
  border-radius: 5px;
  text-align: center;
  transition: all 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.task-option:hover {
  color: rgb(10, 10, 10);
  font-weight: bold;
  background-color: #ea81af;
  box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 3px 0px inset,
    rgba(0, 0, 0, 0.15) 0px 3px 7px 3px inset;
}

/*  */
/*  */

.task-menu-container > button {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  box-sizing: content-box;
  width: 30px;
  height: 30px;
  padding: 2.5px;
  border-radius: 30px;
  box-shadow: none;
  background-color: transparent;
  transition: all 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.task-menu-container > button > * {
  position: absolute;
  pointer-events: none;
  width: 25px;
  height: 25px;
  transition: all 0.35s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.task-menu-container > button > .tip {
  width: max-content;
}
.task-menu-container > button:hover {
  background-color: hsl(240, 5%, 25%);
  box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 0px 2px,
    rgba(0, 0, 0, 0.8) 0px 4px 6px -1px,
    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;
}
.task-menu-container > button:hover .tip {
  opacity: 1;
}
.task-menu-container > button:active {
  translate: 0px 3px;
  background-color: hsl(240, 5%, 20%);
  box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 0px 1px,
    rgba(0, 0, 0, 0.8) 0px 3px 5px -1px,
    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;
}

/* delete icon */
.task-delete-button svg {
  width: 44%;
}
.task-menu-container > .task-delete-button:hover {
  background-color: rgb(237, 56, 56);
}
/* copy icon */
.task-copy-button > img:nth-child(2) {
  transform-origin: 15.64px 9.48px;
}
.task-copy-button:hover > img:nth-child(2) {
  rotate: 180deg;
}
/* edit icon */
.task-edit-button:hover > img:first-child {
  rotate: -25deg;
}
/* transfer icon */
.task-transfer-button:hover > img {
  transition: all 0.3s ease-in;
  translate: -1.5px;
  animation: swing 1s 0.3s infinite;
}
@keyframes swing {
  50% {
    translate: 1.5px;
  }
}

/*  */
/*  */

.task-p-container hr {
  width: 100%;
}
.task-p-container p {
  white-space: pre-wrap;
  text-wrap: pretty;
  font-size: 19px;
  transition: width cubic-bezier(0.165, 0.84, 0.44, 1) 0.5s;
}
.task-p-container > textarea {
  box-sizing: border-box;
  outline: 0;
  font-size: 19px;
  overflow: hidden;
  background: rgba(255, 255, 255, 0.1);
  box-shadow: 0px 0px 0px #0e0e0e, 0px 0px 0px rgb(95 94 94 / 25%),
    inset 1.5px 1.5px 3px #0e0e0e, inset -1.5px -1.5px 3px #5f5e5e;
}
.markdown-body {
  background-color: transparent;
  font-family: inherit;
  color: inherit;
  font-size: inherit;
}
.markdown-body .markdown-alert {
  padding: 0 1em;
}
.markdown-body :is(h1, h2, h3, h4) {
  border-bottom: none;
}

/*  */
/*  */
.task-add-container {
  position: absolute;
  top: 15px;
  left: 18px;
  min-width: 80px;
  height: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.task-add-container > button {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
  width: 27px;
  height: 27px;
  border-radius: 50%;
  background-color: #ea81af;
  scale: 0;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
}
.task-add-container > button::before {
  background-color: #ea81af;
  content: "";
  position: absolute;
  clip-path: polygon(100% 100%, 0 0, 0 100%);
  transform: rotateZ(45deg);
  width: 12px;
  left: 0;
  aspect-ratio: 1/1;
  border-radius: 3px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
}
.task-add-container > button > * {
  pointer-events: none;
  width: 20px;
  height: 20px;
}

/*  */
/*  */
.task-add-container + .task-add-container {
  left: unset;
  right: 15px;
  justify-content: flex-end;
}
.task-add-container + .task-add-container > button {
  transform: rotateZ(180deg);
}
/* 
  隱藏 .task-add-container，如果它是 .task-p-container 下的 textarea 的直接兄弟元素
  這個設計假設了以下結構：
  task-container 
  - ...
  - task-p-container 
    -- p 或 textarea
  - task-add-container
  - task-add-container
*/

/* 
  使用 :is() 和 :has() 選擇器結合，:is() 用於選擇包含 .task-p-container 的元素，:has() 用於選擇 .task-p-container 下包含 textarea 的元素
  通過兄弟選擇器 + 來選擇直接緊跟在這個 textarea 後面的 .task-add-container 元素
  通過通用兄弟選擇器 ~ 來選擇所有在 .task-p-container 後面的 .task-add-container 元素
  最後，將選擇到的 .task-add-container 隱藏
*/
:is(:has(+ .task-p-container > textarea)) ~ .task-add-container {
  display: none;
}

/*  */
/*  */
.task-add-container > * {
  pointer-events: none;
}
.task-add-container:hover > * {
  pointer-events: auto;
}
.task-add-container > button {
  transition: scale 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
}
.task-add-container:hover > button {
  scale: 1;
}
.task-add-container > button::before {
  transition: all 0.25s 0.1s cubic-bezier(0.215, 0.61, 0.355, 1);
}
.task-add-container:hover > button::before {
  left: -10px;
  animation: swing 1s 0.3s infinite;
}
.task-add-container:hover > button:hover {
  outline: 3px solid #ea81af90;
}
.task-add-container:hover > button:active {
  scale: 0.9;
}

/*  */
/*  */

#content .task-tall .task-p-container {
  max-height: 350px;
  overflow-y: hidden;
}
#content .task-open .task-p-container {
  max-height: unset;
  overflow-y: hidden;
}
#content .task-editing .task-p-container {
  max-height: unset;
  overflow-y: hidden;
}
#content .task-open {
  padding-bottom: 50px;
}
.task-expand {
  --color: white;
  --size: 25px;
  display: none;
  justify-content: center;
  align-items: center;
  align-self: center;
  position: absolute;
  bottom: 30px;
  cursor: pointer;
  font-size: var(--size);
  user-select: none;
  fill: var(--color);
  transition: all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
  scale: 0;
}
.task-container:hover .task-expand {
  scale: 1;
}
.task-tall .task-expand {
  display: flex;
}
.task-editing .task-expand {
  display: none;
}
.task-expand .chevron-down {
  position: absolute;
  animation: keyframes-return 0.5s;
  background-color: #ea81af;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
  border-radius: 7px;
  width: calc(1.2 * var(--size));
  padding: 2px;
}
.task-expand .chevron-down:hover {
  outline: 3px solid #ea81af90;
}
.task-expand input[type="checkbox"]:checked ~ .chevron-down {
  animation: keyframes-rotate 0.5s;
  transform: rotate(180deg);
}
.task-expand input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}
@keyframes keyframes-rotate {
  0% {
    transform: rotate(0deg);
    opacity: 0;
  }
  100% {
    transform: rotate(-180deg);
  }
}
@keyframes keyframes-return {
  0% {
    transform: rotate(-180deg);
    opacity: 0;
  }
  100% {
    transform: rotate(0deg);
  }
}

/*  */
/*  */

.separator {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  height: 15px;
  cursor: grab;
  position: relative;

  transition: height 1s cubic-bezier(0.165, 0.84, 0.44, 1) 0.1s;
}
.separator::before {
  content: "";
  width: 100%;
  height: 2px;
  transition: width 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);
  background-color: white;
  box-shadow: rgba(0, 0, 0, 0.75) 0px 3px 4px,
    rgba(0, 0, 0, 0.35) 10px 12px 3px -3px,
    rgba(255, 255, 255, 0.1) 2px 5px 10px -3px inset;
}

.separator > button {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  right: 0;
  box-sizing: content-box;
  width: 30px;
  height: 30px;
  padding: 2.5px;
  border-radius: 5px;
  box-shadow: none;
  background-color: transparent;
  transition: all 0.2s cubic-bezier(0.215, 0.61, 0.355, 1);

  pointer-events: none;
  translate: 15px;
  opacity: 0;
}
.separator > button > * {
  position: absolute;
  pointer-events: none;
}
.separator > button > svg {
  width: 44%;
}
.separator > button:hover {
  background-color: rgb(237, 56, 56);
}
.separator > button:hover > .tip {
  opacity: 1;
}
.separator > button:active {
  translate: 0px 3px;
  scale: 0.95;
}

.separator:hover::before {
  width: calc(100% - 45px);
}
.separator:hover > button {
  pointer-events: auto;
  translate: 0px;
  opacity: 1;
}

/*  */

#content.current-month .task-transfer-button {
  visibility: hidden;
}
